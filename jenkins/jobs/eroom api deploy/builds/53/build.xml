<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1207.ve6191ff089f8">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <org.jenkinsci.plugins.gwt.GenericCause plugin="generic-webhook-trigger@1.84">
            <resolvedVariables class="tree-map">
              <entry>
                <string>ref</string>
                <string>refs/heads/ci-cd-test</string>
              </entry>
            </resolvedVariables>
            <postContent>{&quot;ref&quot;:&quot;refs/heads/ci-cd-test&quot;,&quot;before&quot;:&quot;64f77e7a9a2f80d35948f8a4cc0e3a9d51103e30&quot;,&quot;after&quot;:&quot;c6a4bde987765a3fb6994def4dc8565573f36cc3&quot;,&quot;repository&quot;:{&quot;id&quot;:509672932,&quot;node_id&quot;:&quot;R_kgDOHmD95A&quot;,&quot;name&quot;:&quot;e-room&quot;,&quot;full_name&quot;:&quot;e-room/e-room&quot;,&quot;private&quot;:false,&quot;owner&quot;:{&quot;name&quot;:&quot;e-room&quot;,&quot;email&quot;:null,&quot;login&quot;:&quot;e-room&quot;,&quot;id&quot;:108541185,&quot;node_id&quot;:&quot;O_kgDOBng1AQ&quot;,&quot;avatar_url&quot;:&quot;https://avatars.githubusercontent.com/u/108541185?v=4&quot;,&quot;gravatar_id&quot;:&quot;&quot;,&quot;url&quot;:&quot;https://api.github.com/users/e-room&quot;,&quot;html_url&quot;:&quot;https://github.com/e-room&quot;,&quot;followers_url&quot;:&quot;https://api.github.com/users/e-room/followers&quot;,&quot;following_url&quot;:&quot;https://api.github.com/users/e-room/following{/other_user}&quot;,&quot;gists_url&quot;:&quot;https://api.github.com/users/e-room/gists{/gist_id}&quot;,&quot;starred_url&quot;:&quot;https://api.github.com/users/e-room/starred{/owner}{/repo}&quot;,&quot;subscriptions_url&quot;:&quot;https://api.github.com/users/e-room/subscriptions&quot;,&quot;organizations_url&quot;:&quot;https://api.github.com/users/e-room/orgs&quot;,&quot;repos_url&quot;:&quot;https://api.github.com/users/e-room/repos&quot;,&quot;events_url&quot;:&quot;https://api.github.com/users/e-room/events{/privacy}&quot;,&quot;received_events_url&quot;:&quot;https://api.github.com/users/e-room/received_events&quot;,&quot;type&quot;:&quot;Organization&quot;,&quot;site_admin&quot;:false},&quot;html_url&quot;:&quot;https://github.com/e-room/e-room&quot;,&quot;description&quot;:&quot;e-room project repository&quot;,&quot;fork&quot;:false,&quot;url&quot;:&quot;https://github.com/e-room/e-room&quot;,&quot;forks_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/forks&quot;,&quot;keys_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/keys{/key_id}&quot;,&quot;collaborators_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/collaborators{/collaborator}&quot;,&quot;teams_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/teams&quot;,&quot;hooks_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/hooks&quot;,&quot;issue_events_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/issues/events{/number}&quot;,&quot;events_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/events&quot;,&quot;assignees_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/assignees{/user}&quot;,&quot;branches_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/branches{/branch}&quot;,&quot;tags_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/tags&quot;,&quot;blobs_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/git/blobs{/sha}&quot;,&quot;git_tags_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/git/tags{/sha}&quot;,&quot;git_refs_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/git/refs{/sha}&quot;,&quot;trees_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/git/trees{/sha}&quot;,&quot;statuses_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/statuses/{sha}&quot;,&quot;languages_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/languages&quot;,&quot;stargazers_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/stargazers&quot;,&quot;contributors_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/contributors&quot;,&quot;subscribers_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/subscribers&quot;,&quot;subscription_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/subscription&quot;,&quot;commits_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/commits{/sha}&quot;,&quot;git_commits_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/git/commits{/sha}&quot;,&quot;comments_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/comments{/number}&quot;,&quot;issue_comment_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/issues/comments{/number}&quot;,&quot;contents_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/contents/{+path}&quot;,&quot;compare_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/compare/{base}...{head}&quot;,&quot;merges_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/merges&quot;,&quot;archive_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/{archive_format}{/ref}&quot;,&quot;downloads_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/downloads&quot;,&quot;issues_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/issues{/number}&quot;,&quot;pulls_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/pulls{/number}&quot;,&quot;milestones_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/milestones{/number}&quot;,&quot;notifications_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/notifications{?since,all,participating}&quot;,&quot;labels_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/labels{/name}&quot;,&quot;releases_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/releases{/id}&quot;,&quot;deployments_url&quot;:&quot;https://api.github.com/repos/e-room/e-room/deployments&quot;,&quot;created_at&quot;:1656741753,&quot;updated_at&quot;:&quot;2022-11-16T12:16:03Z&quot;,&quot;pushed_at&quot;:1670348246,&quot;git_url&quot;:&quot;git://github.com/e-room/e-room.git&quot;,&quot;ssh_url&quot;:&quot;git@github.com:e-room/e-room.git&quot;,&quot;clone_url&quot;:&quot;https://github.com/e-room/e-room.git&quot;,&quot;svn_url&quot;:&quot;https://github.com/e-room/e-room&quot;,&quot;homepage&quot;:null,&quot;size&quot;:1785,&quot;stargazers_count&quot;:3,&quot;watchers_count&quot;:3,&quot;language&quot;:&quot;Java&quot;,&quot;has_issues&quot;:true,&quot;has_projects&quot;:true,&quot;has_downloads&quot;:true,&quot;has_wiki&quot;:true,&quot;has_pages&quot;:false,&quot;has_discussions&quot;:false,&quot;forks_count&quot;:0,&quot;mirror_url&quot;:null,&quot;archived&quot;:false,&quot;disabled&quot;:false,&quot;open_issues_count&quot;:13,&quot;license&quot;:null,&quot;allow_forking&quot;:true,&quot;is_template&quot;:false,&quot;web_commit_signoff_required&quot;:false,&quot;topics&quot;:[],&quot;visibility&quot;:&quot;public&quot;,&quot;forks&quot;:0,&quot;open_issues&quot;:13,&quot;watchers&quot;:3,&quot;default_branch&quot;:&quot;develop&quot;,&quot;stargazers&quot;:3,&quot;master_branch&quot;:&quot;develop&quot;,&quot;organization&quot;:&quot;e-room&quot;},&quot;pusher&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;},&quot;organization&quot;:{&quot;login&quot;:&quot;e-room&quot;,&quot;id&quot;:108541185,&quot;node_id&quot;:&quot;O_kgDOBng1AQ&quot;,&quot;url&quot;:&quot;https://api.github.com/orgs/e-room&quot;,&quot;repos_url&quot;:&quot;https://api.github.com/orgs/e-room/repos&quot;,&quot;events_url&quot;:&quot;https://api.github.com/orgs/e-room/events&quot;,&quot;hooks_url&quot;:&quot;https://api.github.com/orgs/e-room/hooks&quot;,&quot;issues_url&quot;:&quot;https://api.github.com/orgs/e-room/issues&quot;,&quot;members_url&quot;:&quot;https://api.github.com/orgs/e-room/members{/member}&quot;,&quot;public_members_url&quot;:&quot;https://api.github.com/orgs/e-room/public_members{/member}&quot;,&quot;avatar_url&quot;:&quot;https://avatars.githubusercontent.com/u/108541185?v=4&quot;,&quot;description&quot;:&quot;&quot;},&quot;sender&quot;:{&quot;login&quot;:&quot;LarryKwon&quot;,&quot;id&quot;:65128957,&quot;node_id&quot;:&quot;MDQ6VXNlcjY1MTI4OTU3&quot;,&quot;avatar_url&quot;:&quot;https://avatars.githubusercontent.com/u/65128957?v=4&quot;,&quot;gravatar_id&quot;:&quot;&quot;,&quot;url&quot;:&quot;https://api.github.com/users/LarryKwon&quot;,&quot;html_url&quot;:&quot;https://github.com/LarryKwon&quot;,&quot;followers_url&quot;:&quot;https://api.github.com/users/LarryKwon/followers&quot;,&quot;following_url&quot;:&quot;https://api.github.com/users/LarryKwon/following{/other_user}&quot;,&quot;gists_url&quot;:&quot;https://api.github.com/users/LarryKwon/gists{/gist_id}&quot;,&quot;starred_url&quot;:&quot;https://api.github.com/users/LarryKwon/starred{/owner}{/repo}&quot;,&quot;subscriptions_url&quot;:&quot;https://api.github.com/users/LarryKwon/subscriptions&quot;,&quot;organizations_url&quot;:&quot;https://api.github.com/users/LarryKwon/orgs&quot;,&quot;repos_url&quot;:&quot;https://api.github.com/users/LarryKwon/repos&quot;,&quot;events_url&quot;:&quot;https://api.github.com/users/LarryKwon/events{/privacy}&quot;,&quot;received_events_url&quot;:&quot;https://api.github.com/users/LarryKwon/received_events&quot;,&quot;type&quot;:&quot;User&quot;,&quot;site_admin&quot;:false},&quot;created&quot;:false,&quot;deleted&quot;:false,&quot;forced&quot;:false,&quot;base_ref&quot;:null,&quot;compare&quot;:&quot;https://github.com/e-room/e-room/compare/64f77e7a9a2f...c6a4bde98776&quot;,&quot;commits&quot;:[{&quot;id&quot;:&quot;d03d258c61450f80bfe5c92b8550381382833302&quot;,&quot;tree_id&quot;:&quot;30b5ae535b17e172577ca662645801e0e4ac517e&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/14 (#19)\n\n* feat: 동을 제외\r\n\r\n* feat: ResponseType에서 Double을 Big Decimal로 변경\r\n\r\n* feat: 양방향 연관관계 편의 메서드를 Building 기준으로 설정\r\n\r\n* Add: Building Repository에 대한 테스트 코드\r\n\r\n* Add: Building 엔티티 프로퍼티 이름 변경에 따른 테스트코드 변화\r\n\r\n* Fix: 특별시에 한해 시군구를 basiclocalGovernment로 변경\r\n\r\n* Fix: toDto 함수 생성 및 property 수정\r\n\r\n* Add: Address 및 Coordinate 용 DTO 생성\r\n\r\n* Feat: BuildingResponseDto 값 수정\r\n- CoordinateDto 타입 추가\r\n- 단일 건물 응답에서 List&lt;Map&lt;&gt;&gt;을 Map&lt;&gt;으로 변경\r\n\r\n* Add: BuildingRepository에 dynamic projection 추가 및 BuildingRepositoryTest에 projection 메서드 테스트 추가\r\n\r\n* Add: Projection Type인 OnlyBuildingIdAndCoord 추가\r\n\r\n* Fix: BuildingRepository 메소드명 변경 &amp; 테스트 완성&quot;,&quot;timestamp&quot;:&quot;2022-09-22T01:42:29+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/d03d258c61450f80bfe5c92b8550381382833302&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/controller/building/dto/AddressDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/CoordinateDto.java&quot;,&quot;src/main/java/com/project/Project/repository/projection/building/OnlyBuildingIdAndCoord.java&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/controller/building/dto/Address.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/Coordinate.java&quot;],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Coordinate.java&quot;,&quot;src/main/java/com/project/Project/domain/room/Room.java&quot;,&quot;src/main/java/com/project/Project/repository/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/BuildingRequestValidationTest.java&quot;]},{&quot;id&quot;:&quot;0d422eff42aa314f2e62f5f464098033839b1292&quot;,&quot;tree_id&quot;:&quot;052965c581c763c1e18fcb93d012d48d763108a0&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/11 : 페이징 및 이미지 업로드 (#18)\n\n* BuildingRequestDto, BuildingResponseDto 작성\r\n이를 이용한 API 설계\r\n\r\n* BuildingRequestDto, BuildingResponseDto 카카오 맵 호출에 맞게 변경\r\n이에 따른 API들 수정\r\n\r\nBuilding에 Coordinate Embeddable 타입 추가\r\nRoom에 rentFee 추가\r\nAddress에 빌더 및 toString 추가\r\n\r\n* 채광 옵션 추가\r\n\r\n* Junit 4.1 추가\r\n\r\n* 찜 기능에 맞게 MemberRoom에서 Favorite으로 변경\r\n\r\n* - Building에 대한 Summary 엔티티 추가\r\n(건물 전체에 대한 avgScore 및 카테고리 추가)\r\n\r\n- 좋아요 기능을 위한 Like 엔티티 추가\r\n(Member와 Review와 1:N 관계 &amp; member_id, review_id 복합키를 Unique로 설정)\r\n\r\n* @Data 대신 @Setter를 빼기 위한 다른 어노테이션들 사용\r\n\r\n* Like와 관계 추가\r\nFavorite과 관계 추가\r\n\r\n* Building, Room, Review Repository 추가\r\n\r\n* 해당하는 건물,방,리뷰가 존재하는지 확인할 수 있는 Custom Validator 구현\r\n\r\n* ReviewFormRepository 작성\r\n\r\n* ReviewCategory엔티티에 추가되는 categoryEnum\r\n\r\n* Request DTO에 Custom Validator 적용\r\n\r\n* ReviewResponseDto 작성\r\n\r\n* Setter 제거\r\n\r\n* BuildingResponse에 ReviewResponseDto 추가\r\n\r\n* ReviewController 작성 및 Validator 적용\r\n\r\n* BuildingRestController에 Validator 적용\r\n\r\n* RoomRestController todo로 후순위\r\n\r\n* BuildingRestController 테스트 코드 작성\r\n- WebMvc Validator 잘 작동하는지 확인\r\n\r\n* Validate 실패에 따른 Exception 핸들러 작성\r\n\r\n* Test 실패\r\n- JPA Auditing 설정을 분리\r\n\r\n* Test 실패\r\n- 왜인지 모르겠는데, Class 단위에서 적용되는 Builder가 있으면 Serialize가 안됨... 대체 왜인지 모르겠다.\r\n해결 방법\r\n- https://knunu.tistory.com/12\r\n\r\n* 기타 자동 수정\r\n\r\n* /building/search 테스트\r\n/building/ 테스트\r\n- test request를 함수로 분리\r\n- 파라미터가 잘못 들어갈 수 있는 상황(ex. buildingId = a) 추가\r\n\r\n* interface 옵션 이름 오타 수정\r\n\r\n* Review Validate Test\r\n- buildingId : BuildingRestController에서 진행했으므로 생략\r\n- roomId: 패스\r\n- reviewId: 패스\r\n\r\ntodo: ReviewCreateDto 검증\r\n\r\n* Embedded Type에 Getter, NoArgsConstructor, AllArgsConstructor, Builder 추가\r\n\r\n* 400에러(파라미터 타입이 안 맞을 경우) Error Handler 추가\r\n\r\n* 검색이 검색 내용을 구분하지 않음에 따라 search에서 code를 제거\r\n\r\n* Integer -&gt; Long 타입 변환 문제로 인해 Long 타입으로 변경\r\n\r\n* Validator와 reference가 안 되있어서 수정\r\n\r\n* Enum 값을 String 값으로 받고, Enum Validator를 작성\r\n- 이를 통해 ConversionFailureException 대신 ConstraintViolationException 을 발생시키도록 통일\r\n\r\n* Refactor: 리뷰 관련 DTO 수정 및 리뷰 API 설명 추가\r\n\r\n* Feature: ReviewRestContoller GET API들 구현\r\n\r\n* Feature: 리뷰 등록 API 구현중\r\n\r\n* fix: BuildingExist Validator 수정\r\n- Type에도 사용할 수 있도록\r\n- Get요청에서 id를 콤마로 구분해서 받고,List 안에서 validator 사용할 수 있도록\r\n\r\n* feat: BuildingService 구현\r\n\r\n* Feature: 리뷰 등록 API\r\n\r\n* Fix: 엔티티 및 DTO 변경사항 반영\r\n\r\n* Refactor: 장단점키워드 Enum 수정\r\n\r\n* Feature: 이미지 필드 추가 in ReviewCreateDto\r\n\r\n* Test: findByAddress 테스트 및 Address 관련 수정\r\n\r\n* Feature: Address수정 및 Review GET API 커서페이징\r\n\r\n* Feature: S3 이미지 업로드 코드 및 /token/expired 응답\r\n\r\n* Fix: 병합하면서 잘못 들어간 부분들 수정\r\n\r\n* Refactor: RoomImage를 ReviewImage로 변경\r\n\r\n* Refactor: CursorDto 사용하여 코드 변경\r\n\r\n* Refactor: 리뷰 등록 API 분기 삭제\r\n\r\n* Fix: 리뷰 관련 엔티티 정리 및 Serializer\r\n\r\nCo-authored-by: larrykwon &lt;koallarry11@kaist.ac.kr&gt;&quot;,&quot;timestamp&quot;:&quot;2022-09-29T03:19:43+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/0d422eff42aa314f2e62f5f464098033839b1292&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;SeongHoon Jeong&quot;,&quot;email&quot;:&quot;swa07016@khu.ac.kr&quot;,&quot;username&quot;:&quot;swa07016&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/Util/AmazonS3Component.java&quot;,&quot;src/main/java/com/project/Project/controller/CursorDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/DTypeEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/FileFolder.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/KeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewImage.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewToReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewImageRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewKeywordRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/FileService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewImageService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/AmazonS3Service.java&quot;,&quot;src/main/java/com/project/Project/service/impl/FileProcessService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewImageServiceImpl.java&quot;,&quot;src/main/resources/application-aws.yml&quot;,&quot;src/test/java/com/project/Project/repository/ReviewRepositoryTest.java&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/AdvantageKeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/DisadvantageKeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/AdvantageKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/DisadvantageKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewForm.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewFormRepository.java&quot;],&quot;modified&quot;:[&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/controller/TokenController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/ReviewCategoryEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/Review.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewServiceImpl.java&quot;,&quot;src/main/resources/application.yml&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/db/SoftDeleteTest.java&quot;]},{&quot;id&quot;:&quot;a8c8d43846dd6ebd629753d676ace04ff055991a&quot;,&quot;tree_id&quot;:&quot;5b7fafb388a2a364fa02f5ea8bf2189654e02c71&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/22 (#23)\n\n* Feat: BuildingException 및 ErrorCode 작성\r\n\r\n* Feat: jacoco 설치 및 코드 커버리지 확인 &amp; 필요없는 테스트 삭제\r\n\r\n* Feat: buildingName 추가 및 buildingSummary 연관관계 설정\r\n- Building에 buildingName 추가\r\n- BuildingSummary와 Building 간 단방향 일대일 연관관계\r\n- BuildingSummary 컬럼 변경\r\n\r\n* Feat: RoomResponseDto 내의 Id 값들 전부 Long으로\r\n\r\n* Add: Projection 사용해서 findBy를 이용해서 buildingId와 Coordinate만 검색해온 후 controller에서 return\r\n\r\n* Add: BuildingRestController 구현\r\n\r\n* Fix: avgScore 타입 변화\r\n\r\n* Add: Serializer 작성\r\n\r\n* Add: 기존 Serializer 제거 및 rebase 꼬인 거 해결\r\n\r\n* Add: create BuildingToReviewCategoryRepository\r\n\r\n* Add: apply Serializer to BuildingRestController\r\n\r\n* Add: change code block of getBuildingList in that filling the buildingScoreAvg and bestCategory with using buildingToReviewCategory\r\n\r\n* Fix: Controller와 Service에 Pageable 적용\r\n\r\n* Fix: create ApiErrorResult for exceptionHandling\r\n\r\n* Fix: make CustomException and make BuildingException extends it\r\n\r\n* Fix: change All method to use ApiErrorResult as return body\r\n\r\n* Add: make ExceptionController extend ResponseEntityExceptionHandler that handle almost exceptions in mvc automatically.\r\nTherefore, we can deal with CustomException in same way with using handleExceptionInternal&quot;,&quot;timestamp&quot;:&quot;2022-10-03T01:06:27+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/a8c8d43846dd6ebd629753d676ace04ff055991a&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/exception/ApiErrorResult.java&quot;,&quot;src/main/java/com/project/Project/exception/CustomException.java&quot;,&quot;src/main/java/com/project/Project/exception/ErrorCode.java&quot;,&quot;src/main/java/com/project/Project/exception/building/BuildingException.java&quot;,&quot;src/main/java/com/project/Project/repository/BuildingToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;],&quot;removed&quot;:[&quot;src/test/java/com/project/Project/ProjectApplicationTests.java&quot;,&quot;src/test/java/com/project/Project/db/DBConnectionTest.java&quot;],&quot;modified&quot;:[&quot;.gitignore&quot;,&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/room/dto/RoomResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/exception/GlobalControllerExceptionHandler.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;]},{&quot;id&quot;:&quot;a2cbca5dcad91e8adc34d0999518c14a47e57c29&quot;,&quot;tree_id&quot;:&quot;63efe50f3800a5b90288b3656c0c9c2b7be35136&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/24 (#25)\n\n* Add: re-package repository directory\r\n\r\n* Add: config querydsl\r\n\r\n* Add: make custom Repository with querydsl\r\n\r\n* Add: create BuildingSummary and relate with Building\r\n\r\n* Add: create BuildingCustomRepository\r\n\r\n* Add: implement getAllOrderSpecifiers and courseId functions. it is about sortBy feature and cursor-based pagination feature\r\n\r\n* Add: implement searchBuildingQuery, customOrderBy\r\n- make the function return lambda for chaining\r\n\r\n* Add: implement QueryDslUtil for custom order by and cursor-based pagination\r\n\r\n* Fix: minor changes\r\n\r\n* Add: implement searchBuildings which return List&lt;Building&gt;\r\n\r\n* Add: implement toBuildingListResponse function\r\n- if buildingToReviewCategoryList is empty. fetch it\r\n\r\n* Add: re-implement getBuildingsBySearch with customRepo\r\n\r\n* Add: re-implement search. controller has responsibility of\r\n- make Dto\r\n- make pagination\r\n\r\n* Fix: import modules&quot;,&quot;timestamp&quot;:&quot;2022-10-05T23:49:03+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/a2cbca5dcad91e8adc34d0999518c14a47e57c29&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/Util/QueryDslUtil.java&quot;,&quot;src/main/java/com/project/Project/config/QuerydslConfig.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepositoryImpl.java&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/repository/BuildingRepository.java&quot;],&quot;modified&quot;:[&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/repository/BuildingToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/validator/BuildingExistValidator.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;]},{&quot;id&quot;:&quot;ef3ddbfa9c8c000c6b972e1bd3e2bb6e60e0a0bb&quot;,&quot;tree_id&quot;:&quot;bb1310d21c56fd2d69b451662083b7d3d0d246cc&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Fix: Compile Error, hot fix&quot;,&quot;timestamp&quot;:&quot;2022-10-05T23:54:26+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/ef3ddbfa9c8c000c6b972e1bd3e2bb6e60e0a0bb&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;]},{&quot;id&quot;:&quot;c39fba71595db26799844f67ac422560cbc2d733&quot;,&quot;tree_id&quot;:&quot;1a530126a730e47a32d3e4cf5c8e4ac365622e60&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/21 (#27)\n\n* Test: ReviewCreateDto validation\r\n\r\n* Test: POST /building/room/review에서 호출하는 서비스 메소드 테스트\r\n\r\n* Test: POST /building/room/review 테스트 코드 작성\r\n\r\n* Fix: Address 도로명 주소 체계 필드 변경&quot;,&quot;timestamp&quot;:&quot;2022-10-08T14:58:51+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/c39fba71595db26799844f67ac422560cbc2d733&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;SeongHoon Jeong&quot;,&quot;email&quot;:&quot;swa07016@khu.ac.kr&quot;,&quot;username&quot;:&quot;swa07016&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/test/java/com/project/Project/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/test.png&quot;,&quot;src/test/java/com/project/Project/controller/review/dto/ReviewRequestDtoTest.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingServiceTest.java&quot;,&quot;src/test/java/com/project/Project/service/ReviewServiceTest.java&quot;,&quot;src/test/java/com/project/Project/service/RoomServiceTest.java&quot;],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/config/auth/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/AddressDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/ReviewCategoryEnum.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/impl/RoomServiceImpl.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/good/reviewCreateDto1.json&quot;,&quot;src/test/java/com/project/Project/db/SoftDeleteTest.java&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewRepositoryTest.java&quot;]},{&quot;id&quot;:&quot;e88acef1053b012922f1a4fb7fcac8c203106c65&quot;,&quot;tree_id&quot;:&quot;c3a4484ea5cea9bbe744f6b10cf4ae8094e28c42&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/26 (#28)\n\n* Fix: ReviewRequestDto 변경에 따른 변경\r\n\r\n* Fix: add @Param to Repository\r\n\r\n* Fix: By changes of ReviewRequestDto, change buildingSearchPredicate\r\n\r\n* Add: Add method\r\n\r\n* Add: Add method for createBuilding\r\n\r\n* Add: implement method for findByAddress\r\n\r\n* Add: make WebClient for kakaoMap as bean for threadSafe use\r\n\r\n* Add: response dto for kakaoMapAPI\r\n\r\n* Add: implement BuildingGenerator as Bean. make method as static\r\n\r\n* Add: implement createBuilding and apply overloading\r\n\r\n* Add: add ErrorCode for wrong address type\r\n\r\n* Add: make queryDSL work when testing\r\n\r\n* Add: Building generatorTest\r\n\r\n* Add: webClient dependency\r\n\r\n* Add: todo, mocking webclient and buildingGenerator\r\n\r\n* Add: etc for compile error\r\n\r\n* Todo: make test into unit Test with mocking webclient&quot;,&quot;timestamp&quot;:&quot;2022-10-11T14:54:24+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/e88acef1053b012922f1a4fb7fcac8c203106c65&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/Util/BuildingGenerator.java&quot;,&quot;src/main/java/com/project/Project/Util/KakaoAddressAPI.java&quot;,&quot;src/main/java/com/project/Project/config/WebClientConfig.java&quot;,&quot;src/test/java/com/project/Project/repository/RepositoryTestConfig.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingGeneratorTest.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingGeneratorTestConfig.java&quot;],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/exception/ErrorCode.java&quot;,&quot;src/main/java/com/project/Project/exception/GlobalControllerExceptionHandler.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/controller/review/dto/ReviewRequestDtoTest.java&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingServiceTest.java&quot;]},{&quot;id&quot;:&quot;87fe12019124d7b4bfcaeeac3bc20383d22d0691&quot;,&quot;tree_id&quot;:&quot;c84e3de5cff64ec9f1a086fc4e5207a75751b292&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/29 (#30)\n\n* Fix: ReviewRequestDto 변경에 따른 변경\r\n\r\n* Fix: add @Param to Repository\r\n\r\n* Fix: By changes of ReviewRequestDto, change buildingSearchPredicate\r\n\r\n* Add: Add method\r\n\r\n* Add: Add method for createBuilding\r\n\r\n* Add: implement method for findByAddress\r\n\r\n* Add: make WebClient for kakaoMap as bean for threadSafe use\r\n\r\n* Add: response dto for kakaoMapAPI\r\n\r\n* Add: implement BuildingGenerator as Bean. make method as static\r\n\r\n* Add: implement createBuilding and apply overloading\r\n\r\n* Add: add ErrorCode for wrong address type\r\n\r\n* Add: make queryDSL work when testing\r\n\r\n* Add: Building generatorTest\r\n\r\n* Add: webClient dependency\r\n\r\n* Add: todo, mocking webclient and buildingGenerator\r\n\r\n* Add: etc for compile error\r\n\r\n* Todo: make test into unit Test with mocking webclient\r\n\r\n* Add: implement findBuildingsByIdIn with pagination and apply it to controller\r\n\r\n* Fix: make getBuildingMarker use serializer\r\n\r\nCo-authored-by: SeongHoon Jeong &lt;swa07016@khu.ac.kr&gt;&quot;,&quot;timestamp&quot;:&quot;2022-10-11T15:28:17+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/87fe12019124d7b4bfcaeeac3bc20383d22d0691&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;]},{&quot;id&quot;:&quot;2fdc52c602f8fcd31b45bfae5e4e2a53b38ab0d7&quot;,&quot;tree_id&quot;:&quot;05fe0e81ff4848cbb2381384f65c74fa95a48306&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Fix: Address NotNull 정책 추가&quot;,&quot;timestamp&quot;:&quot;2022-10-12T00:28:12+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/2fdc52c602f8fcd31b45bfae5e4e2a53b38ab0d7&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;swa07016&quot;,&quot;email&quot;:&quot;swa07016@khu.ac.kr&quot;,&quot;username&quot;:&quot;swa07016&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;swa07016&quot;,&quot;email&quot;:&quot;swa07016@khu.ac.kr&quot;,&quot;username&quot;:&quot;swa07016&quot;},&quot;added&quot;:[],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/service/ReviewServiceTest.java&quot;]},{&quot;id&quot;:&quot;b355ad386416d7a08171e041526835570f566ea7&quot;,&quot;tree_id&quot;:&quot;063c84c9208d28494c796f2db0361c1ed1f72981&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;HotFix\n- BuildingGenerator가 Address, Coordinate에만 책임이 있도록\n- BuildingService에서 buildingName과 hasElevator 업데이트하도록 로직 변경\n- 이에 따라 ReviewRestController도 로직 수정\n- BuildingGenerator에서 이미 Building이 존재하는지 확인하는 로직추가\n- BuidlingGenerator에서 BuildingSummary 생성\n- BuildingGenerator에서 Building 저장\n- ReviewRequestDto.ReviewCreateDto에서 AddressDto 적용&quot;,&quot;timestamp&quot;:&quot;2022-10-16T17:13:52+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/b355ad386416d7a08171e041526835570f566ea7&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/controller/building/dto/BuildingOptionalDto.java&quot;],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/Util/BuildingGenerator.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/AddressDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingServiceTest.java&quot;]},{&quot;id&quot;:&quot;adeec2481affadee604ad65c621921e5e1c66593&quot;,&quot;tree_id&quot;:&quot;5064d57631e83877815dbd5d46c87345c902ccfc&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/32 (#33)\n\n* Add: create new buildingTestSetGen\r\n\r\n* Fix: Fix compile erroes caused by address dto\r\n\r\n* Fix: Resolve error that jackson can&apos;t serialized ApiErrorResult because there is no getter\r\n\r\n* Fix: Change BuildingGenerator throw error when there are no addr by searching\r\n\r\n* Fix: returning Building Entity cause infinite recursion because building and building summary is bidirectional relation\r\n\r\n* Fix: fix something\r\n\r\n* Fix: create new api(POST building/)\r\n\r\n* Fix: Fix BuildingTestdataGen.ts(delay function, typo)\r\nTodo: test concurrent test\r\n\r\n* Add: catch the DuplicatedError\r\n\r\n* Add: Setup ReviewCategory when server startup\r\n\r\n* Add: Implement ReviewCategoryService\r\n\r\n* Refactor: refactor ReviewCategory&apos;s init method\r\n\r\n* Add: ReviewKeywordRepository implement and Test\r\n\r\n* Add: implement ReviewKeywordService\r\n\r\n* Add: init reviewCategory and reviewKeyword when server start up&quot;,&quot;timestamp&quot;:&quot;2022-10-20T01:51:17+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/adeec2481affadee604ad65c621921e5e1c66593&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/BuildingGen/BuildingTestdataGen.ts&quot;,&quot;src/BuildingGen/package-lock.json&quot;,&quot;src/BuildingGen/package.json&quot;,&quot;src/BuildingGen/tsconfig.json&quot;,&quot;src/main/java/com/project/Project/service/ReviewCategoryService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewKeywordService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewCategoryServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewKeywordServiceImpl.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewCategoryRepoTest.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewKeywordRepoTest.java&quot;],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;.gitignore&quot;,&quot;src/main/java/com/project/Project/ProjectApplication.java&quot;,&quot;src/main/java/com/project/Project/Util/BuildingGenerator.java&quot;,&quot;src/main/java/com/project/Project/config/auth/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/exception/ApiErrorResult.java&quot;,&quot;src/main/java/com/project/Project/exception/GlobalControllerExceptionHandler.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewKeywordRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/controller/review/dto/ReviewRequestDtoTest.java&quot;]},{&quot;id&quot;:&quot;6b8a854c68780cbe7644a1dc7eaf5210e04a22d1&quot;,&quot;tree_id&quot;:&quot;ab90f0c8f092ff3009a8bec4aca0d0d006a7537d&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/36 (#37)\n\n* Fix: assert the parameter of toAddressDto and toCoordinateDto cannot be null\r\n\r\n* Fix: change the type of Address field in BuildingResponseDto into AddressDto from string\r\n\r\n* Add: implement Exception in Room Type\r\n\r\n* Add: Implement static field type of Functional Interface to protect NPE\r\n\r\n* Fix: change the BuildingSummary setting.\r\nreviewCnt has default value 0\r\navgScore doesn&apos;t have default value because if there is no review on building yet, that value must be null not 0\r\n\r\n* Add: implement static field with type of Functional interface to prevent NPE\r\n\r\n* Add: Apply all Null safe features into BuildingSerializer&quot;,&quot;timestamp&quot;:&quot;2022-10-21T00:50:31+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/6b8a854c68780cbe7644a1dc7eaf5210e04a22d1&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/exception/room/RoomException.java&quot;,&quot;src/main/java/com/project/Project/serializer/room/RoomSerializer.java&quot;],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Coordinate.java&quot;,&quot;src/main/java/com/project/Project/exception/ErrorCode.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;]},{&quot;id&quot;:&quot;af95aa8281753dd77c14605edeba5b7358d067e7&quot;,&quot;tree_id&quot;:&quot;99a855f068826b4b52b8cc7276e13ff0c7056058&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/35 (#38)\n\n* Add: Test when queryDsl execute the entity life cycle is driven\r\n\r\n* Fix: refactor the package of repository\r\n\r\n* Fix: change type of score into Double from BigDecimal\r\n\r\n* Fix: implement postUpdate, postDelete logic for review entity when using querydsl\r\n\r\n* Fix: Refactor the repository package\r\n\r\n* Add: For Building Summary EventListener, implement update BuildingSummary method\r\n\r\n* Add: For EventListeners, explicitly inject dependency using java reflection\r\n\r\n* Add: implement entityGraphs for join implicitly\r\n\r\n* Add: implement entityGraph in Review for joining implicitly\r\n\r\n* Add: implement repository for review and reviewCategory\r\n\r\n* Add: implement review Event Listener\r\n\r\n* Fix: etc&quot;,&quot;timestamp&quot;:&quot;2022-10-23T01:15:53+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/af95aa8281753dd77c14605edeba5b7358d067e7&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/config/EventListenerConfig.java&quot;,&quot;src/main/java/com/project/Project/repository/EventListener.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingSummaryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/member/MemberRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewEventListener.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewImageRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewKeywordRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/room/RoomRepository.java&quot;,&quot;src/main/java/com/project/Project/user/repository/UserRepositoryImpl.java&quot;,&quot;src/test/java/JPA/FlushTest.java&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/repository/BuildingToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/MemberRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewImageRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewKeywordRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/RoomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepositoryImpl.java&quot;],&quot;modified&quot;:[&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/review/Review.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/room/Room.java&quot;,&quot;src/main/java/com/project/Project/exception/ErrorCode.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/MemberServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewCategoryServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewImageServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewKeywordServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/RoomServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/user/entity/UserEntity.java&quot;,&quot;src/main/java/com/project/Project/user/repository/UserRepository.java&quot;,&quot;src/main/java/com/project/Project/validator/ReviewExistValidator.java&quot;,&quot;src/main/java/com/project/Project/validator/RoomExistValidator.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewCategoryRepoTest.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewKeywordRepoTest.java&quot;,&quot;src/test/java/com/project/Project/service/ReviewServiceTest.java&quot;,&quot;src/test/java/com/project/Project/service/RoomServiceTest.java&quot;]},{&quot;id&quot;:&quot;a11272e275cb75d3bc20c17c59bc33d296236a99&quot;,&quot;tree_id&quot;:&quot;bc31cec33340220e0c2a94cdde9f2b07d2e27b66&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/39 (#41)\n\n* Fix: refactoring auth package\r\n\r\n* Fix: use static value of maxAge\r\n\r\n* Fix: below description\r\n- rename UserDto into MemberDto\r\n- save refreshToken in Member Table\r\n- implement JwtException, JwtAuthentication for JwtAuthFilter\r\n- repackage\r\n\r\n* Add: implement CustomBasicAuthFilter for Test. just get Authentication only with member Id\r\n\r\n* Add: implement MemberSerializer\r\n\r\n* Add: implement findById in MemberService\r\n\r\n* Refactor: refactor JwtAuthFilter fitted in AbstractAuthenticationProcessingFilter. And when the access Token is expired, filter automatically verify token and reIssue JwtToken and save it in cookie.\r\n\r\n* Fix: etc\r\n\r\n* Fix: fix belows\r\n- make providers implement authentication provider\r\n- change JwtAuthentication contains more info(Token, request, response, isAuthenticated, principalDetails)\r\n- add jwtProvider to ProviderManager\r\n\r\n* Refactor: Provider only get Authentication. and Filter just judge it&quot;,&quot;timestamp&quot;:&quot;2022-10-26T01:10:18+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/a11272e275cb75d3bc20c17c59bc33d296236a99&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/auth/JwtAuthentication.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/MemberDto.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/OAuthAttributes.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/Token.java&quot;,&quot;src/main/java/com/project/Project/auth/exception/JwtException.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/CustomBasicAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/OAuth2SuccessHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/provider/JwtProvider.java&quot;,&quot;src/main/java/com/project/Project/auth/service/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/auth/service/TokenService.java&quot;,&quot;src/main/java/com/project/Project/config/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/serializer/member/MemberSerializer.java&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/config/auth/OAuth2SuccessHandler.java&quot;,&quot;src/main/java/com/project/Project/config/auth/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/config/auth/UserRequestMapper.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/OAuthAttributes.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/Token.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/UserDto.java&quot;,&quot;src/main/java/com/project/Project/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/service/impl/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/TokenService.java&quot;],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/Util/CookieUtil.java&quot;,&quot;src/main/java/com/project/Project/controller/TokenController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/domain/Member.java&quot;,&quot;src/main/java/com/project/Project/service/MemberService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/MemberServiceImpl.java&quot;,&quot;src/main/resources/application.yml&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;]},{&quot;id&quot;:&quot;4eb23429051269229a2ab1e80013e75a956ad1de&quot;,&quot;tree_id&quot;:&quot;500c65f218ef457d6bd3677bdb82ca398bf265b1&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Hotfix: according to change of figma, change reviewCreateDto&quot;,&quot;timestamp&quot;:&quot;2022-10-26T01:55:37+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/4eb23429051269229a2ab1e80013e75a956ad1de&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/review/Review.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/controller/review/dto/ReviewRequestDtoTest.java&quot;]},{&quot;id&quot;:&quot;5b0a7c898d8204a087ea7c4b727d3a371453d8d4&quot;,&quot;tree_id&quot;:&quot;884f04543d32f73c2fd091953262ee0fe8b1e9e0&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Hotfix: resolve error with creating bean with JwtAuthFilter because no injection of AuthenticationManager&quot;,&quot;timestamp&quot;:&quot;2022-10-26T02:07:11+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/5b0a7c898d8204a087ea7c4b727d3a371453d8d4&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/auth/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/config/SecurityConfig.java&quot;]},{&quot;id&quot;:&quot;51e634222b20ca866e3d670882bb6d63f6a8b535&quot;,&quot;tree_id&quot;:&quot;291d796863336a5ce8ceab7a42f7036a3c7f701b&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Issue/40 (#45)\n\n* Fix: Debugging and Test complete for Auth\r\n\r\n* Fix: refactor package of auth\r\n\r\n* Fix: Change the bigDecimal type to Double because BigDecimal type is slow to compute and it is for very large number or money transaction\r\n\r\n* Add: implement MemberException and ErrorCode for it\r\n\r\n* Add: implement AuthUser argument Resolver which get the info of login user from security context holder\r\n\r\n* Refactor: repackage service package\r\n\r\n* Fix: additional change of changing the type of BigDecimal to Double\r\n\r\n* Fix: divide the reviewCreateRequestDto into small dto\r\n\r\n* Fix: make createRoom has responsibility of find and create\r\n\r\n* Fix: Add some comment and change the validation of dto. make null-safe when set options in building.\r\n\r\n* Refactor: make Review Create method has responsibility of find Review or create Review\r\n\r\n* Add: add comment on createReview\r\n\r\n* Fix: refactor package\r\n\r\n* Refactor: remove dependency of FileFolder in the logic of upload image.\r\nimplement command pattern and inject it into FileProcessService\r\n\r\n* Refactor: getPropertyName with Util class\r\n\r\n* Refactor: refactor below\r\n1. return cloudFront url as filePath\r\n2. FileProcessServiceImpl as abstract for generic bean\r\n3. therefore, ReviewImageProcess have responsibility of post or pre process for upload image\r\n4. reviewImageProcess generate reviewImage entity\r\n\r\n* Refactor: refactoring...\r\n1. implement ReviewSerializer, but need score\r\n\r\n* Refactor: implement toReviewListResponse in ReviewSerializer\r\n\r\n* Refactor: implement ReviewGenerator and refactor by extracting method\r\n\r\n* Add: implement nickNameGen in ReviewGenerator\r\n\r\n* Add: complete implement nickNameGen in ReviewGenerator\r\n\r\n* Add: complete implement MemberGen\r\n\r\n* Add: implement TestReviewGenerator (1)\r\n\r\n* Add: complete implementing ReviewGenerator.\r\nReviewGenerator generate review with arbitrarily options and can also bulk generate reviews with case.json which is mapped the reviewers and buildingIds.\r\n\r\n* Fix: Security error resolve\r\n\r\n* Add: Complete test Review Create\r\n\r\n* Fix: fix the wrong image url&quot;,&quot;timestamp&quot;:&quot;2022-11-15T22:17:08+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/51e634222b20ca866e3d670882bb6d63f6a8b535&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;LarryKwon&quot;,&quot;email&quot;:&quot;65128957+LarryKwon@users.noreply.github.com&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;GitHub&quot;,&quot;email&quot;:&quot;noreply@github.com&quot;,&quot;username&quot;:&quot;web-flow&quot;},&quot;added&quot;:[&quot;src/main/java/com/project/Project/auth/AuthUser.java&quot;,&quot;src/main/java/com/project/Project/auth/AuthUserArgumentResolver.java&quot;,&quot;src/main/java/com/project/Project/auth/CustomAuthenticationEntryPoint.java&quot;,&quot;src/main/java/com/project/Project/auth/authentication/JwtAuthentication.java&quot;,&quot;src/main/java/com/project/Project/auth/exception/BasicAuthException.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/BasicAuthFailureHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/JWTFailureHandler.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/AmazonS3PackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/AmazonS3Service.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/FilePackageMeta.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/FileService.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ProfileImagePackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ProfileImagePackageMetaMeta.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ReviewImagePackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ReviewImagePackageMetaMeta.java&quot;,&quot;src/main/java/com/project/Project/config/AmazonConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewBaseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResidencePeriodDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewScoreDto.java&quot;,&quot;src/main/java/com/project/Project/controller/room/dto/RoomBaseDto.java&quot;,&quot;src/main/java/com/project/Project/exception/member/MemberException.java&quot;,&quot;src/main/java/com/project/Project/exception/review/ReviewException.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingGenerator.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/building/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/FileProcessService.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/FileProcessServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/ProfileImageProcess.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/ReviewImageProcess.java&quot;,&quot;src/main/java/com/project/Project/service/member/MemberService.java&quot;,&quot;src/main/java/com/project/Project/service/member/impl/MemberServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewCategoryService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewGenerator.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewImageService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewKeywordService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewCategoryServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewImageServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewKeywordServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/room/RoomService.java&quot;,&quot;src/main/java/com/project/Project/service/room/impl/RoomServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/util/ApplicationContextServe.java&quot;,&quot;src/main/java/com/project/Project/util/JsonResult.java&quot;,&quot;src/main/java/com/project/Project/util/KakaoAddressAPI.java&quot;,&quot;src/main/java/com/project/Project/util/PropertyUtil.java&quot;,&quot;src/main/java/com/project/Project/util/component/CookieUtil.java&quot;,&quot;src/main/java/com/project/Project/util/component/MemberGen.java&quot;,&quot;src/main/java/com/project/Project/util/component/QueryDslUtil.java&quot;,&quot;src/main/resources/application-security.yml&quot;,&quot;src/test/java/com/project/Project/generator/TestMemberGenerator.java&quot;,&quot;src/test/java/com/project/Project/generator/review/ReviewCreateConfigurer.java&quot;,&quot;src/test/java/com/project/Project/generator/review/TestCase.java&quot;,&quot;src/test/java/com/project/Project/generator/review/TestReviewGenerator.java&quot;,&quot;src/test/java/com/project/Project/generator/review/testCase/case.json&quot;,&quot;src/test/java/com/project/Project/generator/review/testImage/test1.png&quot;,&quot;src/test/java/com/project/Project/generator/review/testImage/test2.png&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/Util/AmazonS3Component.java&quot;,&quot;src/main/java/com/project/Project/Util/BuildingGenerator.java&quot;,&quot;src/main/java/com/project/Project/Util/CookieUtil.java&quot;,&quot;src/main/java/com/project/Project/Util/JsonResult.java&quot;,&quot;src/main/java/com/project/Project/Util/KakaoAddressAPI.java&quot;,&quot;src/main/java/com/project/Project/Util/QueryDslUtil.java&quot;,&quot;src/main/java/com/project/Project/auth/JwtAuthentication.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/FileService.java&quot;,&quot;src/main/java/com/project/Project/service/MemberService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewCategoryService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewImageService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewKeywordService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/RoomService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/AmazonS3Service.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/FileProcessService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/MemberServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewCategoryServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewImageServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewKeywordServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/RoomServiceImpl.java&quot;],&quot;modified&quot;:[&quot;build.gradle&quot;,&quot;src/BuildingGen/package.json&quot;,&quot;src/main/java/com/project/Project/ProjectApplication.java&quot;,&quot;src/main/java/com/project/Project/auth/exception/JwtException.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/CustomBasicAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/OAuth2SuccessHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/provider/JwtProvider.java&quot;,&quot;src/main/java/com/project/Project/auth/service/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/auth/service/TokenService.java&quot;,&quot;src/main/java/com/project/Project/config/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/config/WebClientConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/OauthTestController.java&quot;,&quot;src/main/java/com/project/Project/controller/TokenController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingOptionalDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/Member.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/AnonymousStatus.java&quot;,&quot;src/main/java/com/project/Project/domain/review/Review.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewImage.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewSummary.java&quot;,&quot;src/main/java/com/project/Project/exception/ErrorCode.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewEventListener.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/member/MemberSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/main/resources/application-aws.yml&quot;,&quot;src/main/resources/application.yml&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/controller/review/dto/ReviewRequestDtoTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewKeywordRepoTest.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingGeneratorTest.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingServiceTest.java&quot;,&quot;src/test/java/com/project/Project/service/ReviewServiceTest.java&quot;,&quot;src/test/java/com/project/Project/service/RoomServiceTest.java&quot;]},{&quot;id&quot;:&quot;ec1783aebcac7236b18ea74c439c1a342d26b956&quot;,&quot;tree_id&quot;:&quot;d3b47d6c61c84b41df5cb73e6c8fcd15aedcb60c&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Hotfix: invalidate cookies when jwt authentication failed&quot;,&quot;timestamp&quot;:&quot;2022-11-17T01:17:25+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/ec1783aebcac7236b18ea74c439c1a342d26b956&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/auth/handler/JWTFailureHandler.java&quot;,&quot;src/main/java/com/project/Project/config/SecurityConfig.java&quot;,&quot;src/main/resources/application-security.yml&quot;]},{&quot;id&quot;:&quot;5dfd8440226ff72532c7328761db8b0ed87997cd&quot;,&quot;tree_id&quot;:&quot;f943927f0b80c0fcad05ba878d23b458bc74cfd3&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Test And Fix:\n- building/marking\n- building/?buildingIds&amp;&amp;cursorId\n- building/{buildingId}&quot;,&quot;timestamp&quot;:&quot;2022-11-17T03:16:39+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/5dfd8440226ff72532c7328761db8b0ed87997cd&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/building/impl/BuildingServiceImpl.java&quot;,&quot;src/main/resources/application-security.yml&quot;,&quot;src/main/resources/application.yml&quot;]},{&quot;id&quot;:&quot;3db5bd6f00c7b2b2c230ebdfa043badbde6fe283&quot;,&quot;tree_id&quot;:&quot;04a19feb55ab675d7968a33e25a4c9dc597a5c2d&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;fix: test 패키지 구조 변경&quot;,&quot;timestamp&quot;:&quot;2022-11-22T23:42:30+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/3db5bd6f00c7b2b2c230ebdfa043badbde6fe283&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;swa07016&quot;,&quot;email&quot;:&quot;swa07016@naver.com&quot;,&quot;username&quot;:&quot;swa07016&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;swa07016&quot;,&quot;email&quot;:&quot;swa07016@naver.com&quot;,&quot;username&quot;:&quot;swa07016&quot;},&quot;added&quot;:[&quot;src/test/java/com/project/Project/unit/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/review/dto/ReviewRequestDtoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto2.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto3.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto4.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto5.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto6.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto7.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/good/reviewCreateDto1.json&quot;,&quot;src/test/java/com/project/Project/unit/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/RepositoryTestConfig.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewCategoryRepoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewKeywordRepoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingGeneratorTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingGeneratorTestConfig.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/ReviewLikeServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/ReviewServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/RoomServiceTest.java&quot;,&quot;src/test/java/com/project/Project/util/annotation/WithMockCustomOAuth2Account.java&quot;,&quot;src/test/java/com/project/Project/util/annotation/WithMockCustomOAuth2AccountSecurityContextFactory.java&quot;,&quot;src/test/java/com/project/Project/util/generator/member/TestMemberGenerator.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/ReviewCreateConfigurer.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/TestCase.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/TestReviewGenerator.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testCase/case.json&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testImage/test1.png&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testImage/test2.png&quot;,&quot;src/test/resources/test.png&quot;],&quot;removed&quot;:[&quot;src/test/java/com/project/Project/WithMockCustomOAuth2Account.java&quot;,&quot;src/test/java/com/project/Project/WithMockCustomOAuth2AccountSecurityContextFactory.java&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/controller/review/controller/test.png&quot;,&quot;src/test/java/com/project/Project/controller/review/dto/ReviewRequestDtoTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto2.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto3.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto4.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto5.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto6.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto7.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/good/reviewCreateDto1.json&quot;,&quot;src/test/java/com/project/Project/db/SoftDeleteTest.java&quot;,&quot;src/test/java/com/project/Project/generator/TestMemberGenerator.java&quot;,&quot;src/test/java/com/project/Project/generator/review/ReviewCreateConfigurer.java&quot;,&quot;src/test/java/com/project/Project/generator/review/TestCase.java&quot;,&quot;src/test/java/com/project/Project/generator/review/TestReviewGenerator.java&quot;,&quot;src/test/java/com/project/Project/generator/review/testCase/case.json&quot;,&quot;src/test/java/com/project/Project/generator/review/testImage/test1.png&quot;,&quot;src/test/java/com/project/Project/generator/review/testImage/test2.png&quot;,&quot;src/test/java/com/project/Project/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/repository/RepositoryTestConfig.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewCategoryRepoTest.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewKeywordRepoTest.java&quot;,&quot;src/test/java/com/project/Project/repository/ReviewRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingGeneratorTest.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingGeneratorTestConfig.java&quot;,&quot;src/test/java/com/project/Project/service/BuildingServiceTest.java&quot;,&quot;src/test/java/com/project/Project/service/ReviewServiceTest.java&quot;,&quot;src/test/java/com/project/Project/service/RoomServiceTest.java&quot;],&quot;modified&quot;:[]},{&quot;id&quot;:&quot;445c9f0b57eaf441bb59211fde220c4f73894e73&quot;,&quot;tree_id&quot;:&quot;b1b5327abc8a76e95399aa96189000255565ee5d&quot;,&quot;distinct&quot;:false,&quot;message&quot;:&quot;Squashed commit of the following:\n\ncommit 8f84289cae4d51b2e05f00a7ee8164cd6eed9fbe\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Sun Dec 4 20:50:03 2022 +0900\n\n    Add: Test Complete for deleting review\n\ncommit 52efa80e2293573826e3ebf93a63e9ece13e6587\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Sun Dec 4 20:35:01 2022 +0900\n\n    Add: Build ReviewScoreDto in the ReviewListRespose\n\ncommit 0feb156f2095a34574462ac78be672fd68a594c5\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Sun Dec 4 19:29:32 2022 +0900\n\n    Add: test complete on get reviewList with roomId\n\ncommit 4870cd47140cca49ee68b5b3d341d61810c04654\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Wed Nov 23 01:41:49 2022 +0900\n\n    Add: test complete on get reviewList with buildingId\n\ncommit 8cd371991dee10296b0a904d549124f19e88c143\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Tue Nov 22 00:37:59 2022 +0900\n\n    Add: implement cursor pagination with querydsl in review domain and serverless setting\n\ncommit 6ea7a48bc4edbf15945cbcedb893ed90975943cf\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Sat Nov 19 03:22:19 2022 +0900\n\n    refactor: rename the test files\n\ncommit ae8dd55b55e39fdeb460833488297fd35589aac3\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Sat Nov 19 02:53:46 2022 +0900\n\n    Test And Fix: complete testing on BuildingRestController\n\ncommit a80b704b2f0c08fe58da7a78094cbbda7bf0f685\nAuthor: larrykwon &lt;koallarry11@kaist.ac.kr&gt;\nDate:   Fri Nov 18 03:27:10 2022 +0900\n\n    Test And Fix:\n    - select with filter&quot;,&quot;timestamp&quot;:&quot;2022-12-04T22:27:19+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/445c9f0b57eaf441bb59211fde220c4f73894e73&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[&quot;serverless.yml&quot;,&quot;src/main/java/com/project/Project/StreamLambdaHandler.java&quot;,&quot;src/main/java/com/project/Project/loader/review/ReviewLoader.java&quot;],&quot;removed&quot;:[],&quot;modified&quot;:[&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/auth/authentication/JwtAuthentication.java&quot;,&quot;src/main/java/com/project/Project/config/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/config/WebConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/OauthTestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/room/dto/RoomResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/AnonymousStatus.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/ReviewCategoryEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/Review.java&quot;,&quot;src/main/java/com/project/Project/domain/room/Room.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewEventListener.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/member/MemberSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/room/RoomSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/building/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/FileProcessServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewServiceImpl.java&quot;,&quot;src/main/resources/application.yml&quot;,&quot;src/test/java/com/project/Project/util/generator/review/ReviewCreateConfigurer.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testCase/case.json&quot;]},{&quot;id&quot;:&quot;c6a4bde987765a3fb6994def4dc8565573f36cc3&quot;,&quot;tree_id&quot;:&quot;eea34c829088bd51c5004aa9f824876690be950a&quot;,&quot;distinct&quot;:true,&quot;message&quot;:&quot;Merge branch &apos;develop&apos; into ci-cd-test&quot;,&quot;timestamp&quot;:&quot;2022-12-07T02:36:15+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/c6a4bde987765a3fb6994def4dc8565573f36cc3&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[&quot;serverless.yml&quot;,&quot;src/BuildingGen/BuildingTestdataGen.ts&quot;,&quot;src/BuildingGen/package-lock.json&quot;,&quot;src/BuildingGen/package.json&quot;,&quot;src/BuildingGen/tsconfig.json&quot;,&quot;src/main/java/com/project/Project/StreamLambdaHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/AuthUser.java&quot;,&quot;src/main/java/com/project/Project/auth/AuthUserArgumentResolver.java&quot;,&quot;src/main/java/com/project/Project/auth/CustomAuthenticationEntryPoint.java&quot;,&quot;src/main/java/com/project/Project/auth/authentication/JwtAuthentication.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/MemberDto.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/OAuthAttributes.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/Token.java&quot;,&quot;src/main/java/com/project/Project/auth/exception/BasicAuthException.java&quot;,&quot;src/main/java/com/project/Project/auth/exception/JwtException.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/CustomBasicAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/BasicAuthFailureHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/JWTFailureHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/OAuth2SuccessHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/provider/JwtProvider.java&quot;,&quot;src/main/java/com/project/Project/auth/service/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/auth/service/TokenService.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/AmazonS3PackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/AmazonS3Service.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/FilePackageMeta.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/FileService.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ProfileImagePackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ProfileImagePackageMetaMeta.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ReviewImagePackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ReviewImagePackageMetaMeta.java&quot;,&quot;src/main/java/com/project/Project/config/AmazonConfig.java&quot;,&quot;src/main/java/com/project/Project/config/EventListenerConfig.java&quot;,&quot;src/main/java/com/project/Project/config/QuerydslConfig.java&quot;,&quot;src/main/java/com/project/Project/config/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/config/WebClientConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/CursorDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/AddressDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingOptionalDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/CoordinateDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewBaseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResidencePeriodDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewScoreDto.java&quot;,&quot;src/main/java/com/project/Project/controller/room/dto/RoomBaseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/DTypeEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/FileFolder.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/KeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewImage.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewToReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/exception/ApiErrorResult.java&quot;,&quot;src/main/java/com/project/Project/exception/CustomException.java&quot;,&quot;src/main/java/com/project/Project/exception/ErrorCode.java&quot;,&quot;src/main/java/com/project/Project/exception/building/BuildingException.java&quot;,&quot;src/main/java/com/project/Project/exception/member/MemberException.java&quot;,&quot;src/main/java/com/project/Project/exception/review/ReviewException.java&quot;,&quot;src/main/java/com/project/Project/exception/room/RoomException.java&quot;,&quot;src/main/java/com/project/Project/loader/review/ReviewLoader.java&quot;,&quot;src/main/java/com/project/Project/repository/EventListener.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingSummaryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/member/MemberRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/projection/building/OnlyBuildingIdAndCoord.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewEventListener.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewImageRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewKeywordRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/room/RoomRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/member/MemberSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/room/RoomSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingGenerator.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/building/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/FileProcessService.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/FileProcessServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/ProfileImageProcess.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/ReviewImageProcess.java&quot;,&quot;src/main/java/com/project/Project/service/member/MemberService.java&quot;,&quot;src/main/java/com/project/Project/service/member/impl/MemberServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewCategoryService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewGenerator.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewImageService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewKeywordService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewCategoryServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewImageServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewKeywordServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/room/RoomService.java&quot;,&quot;src/main/java/com/project/Project/service/room/impl/RoomServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/user/repository/UserRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/util/ApplicationContextServe.java&quot;,&quot;src/main/java/com/project/Project/util/JsonResult.java&quot;,&quot;src/main/java/com/project/Project/util/KakaoAddressAPI.java&quot;,&quot;src/main/java/com/project/Project/util/PropertyUtil.java&quot;,&quot;src/main/java/com/project/Project/util/component/CookieUtil.java&quot;,&quot;src/main/java/com/project/Project/util/component/MemberGen.java&quot;,&quot;src/main/java/com/project/Project/util/component/QueryDslUtil.java&quot;,&quot;src/main/resources/application-aws.yml&quot;,&quot;src/main/resources/application-security.yml&quot;,&quot;src/test/java/JPA/FlushTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/review/dto/ReviewRequestDtoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto2.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto3.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto4.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto5.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto6.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto7.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/good/reviewCreateDto1.json&quot;,&quot;src/test/java/com/project/Project/unit/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/RepositoryTestConfig.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewCategoryRepoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewKeywordRepoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingGeneratorTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingGeneratorTestConfig.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/ReviewLikeServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/ReviewServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/RoomServiceTest.java&quot;,&quot;src/test/java/com/project/Project/util/annotation/WithMockCustomOAuth2Account.java&quot;,&quot;src/test/java/com/project/Project/util/annotation/WithMockCustomOAuth2AccountSecurityContextFactory.java&quot;,&quot;src/test/java/com/project/Project/util/generator/member/TestMemberGenerator.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/ReviewCreateConfigurer.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/TestCase.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/TestReviewGenerator.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testCase/case.json&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testImage/test1.png&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testImage/test2.png&quot;,&quot;src/test/resources/test.png&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/Util/CookieUtil.java&quot;,&quot;src/main/java/com/project/Project/Util/JsonResult.java&quot;,&quot;src/main/java/com/project/Project/config/auth/OAuth2SuccessHandler.java&quot;,&quot;src/main/java/com/project/Project/config/auth/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/config/auth/UserRequestMapper.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/OAuthAttributes.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/Token.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/UserDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/Address.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/Coordinate.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/AdvantageKeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/DisadvantageKeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/AdvantageKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/DisadvantageKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewForm.java&quot;,&quot;src/main/java/com/project/Project/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/repository/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/MemberRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewFormRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/RoomRepository.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/MemberService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/RoomService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/MemberServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/RoomServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/TokenService.java&quot;,&quot;src/test/java/com/project/Project/ProjectApplicationTests.java&quot;,&quot;src/test/java/com/project/Project/WithMockCustomOAuth2Account.java&quot;,&quot;src/test/java/com/project/Project/WithMockCustomOAuth2AccountSecurityContextFactory.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto2.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto3.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto4.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto5.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto6.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto7.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/good/reviewCreateDto1.json&quot;,&quot;src/test/java/com/project/Project/db/DBConnectionTest.java&quot;,&quot;src/test/java/com/project/Project/db/SoftDeleteTest.java&quot;],&quot;modified&quot;:[&quot;.gitignore&quot;,&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/ProjectApplication.java&quot;,&quot;src/main/java/com/project/Project/config/WebConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/OauthTestController.java&quot;,&quot;src/main/java/com/project/Project/controller/TokenController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/room/dto/RoomResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/Member.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/AnonymousStatus.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Coordinate.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/ReviewCategoryEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/Review.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/room/Room.java&quot;,&quot;src/main/java/com/project/Project/exception/GlobalControllerExceptionHandler.java&quot;,&quot;src/main/java/com/project/Project/user/entity/UserEntity.java&quot;,&quot;src/main/java/com/project/Project/user/repository/UserRepository.java&quot;,&quot;src/main/java/com/project/Project/validator/BuildingExistValidator.java&quot;,&quot;src/main/java/com/project/Project/validator/ReviewExistValidator.java&quot;,&quot;src/main/java/com/project/Project/validator/RoomExistValidator.java&quot;,&quot;src/main/resources/application.yml&quot;]}],&quot;head_commit&quot;:{&quot;id&quot;:&quot;c6a4bde987765a3fb6994def4dc8565573f36cc3&quot;,&quot;tree_id&quot;:&quot;eea34c829088bd51c5004aa9f824876690be950a&quot;,&quot;distinct&quot;:true,&quot;message&quot;:&quot;Merge branch &apos;develop&apos; into ci-cd-test&quot;,&quot;timestamp&quot;:&quot;2022-12-07T02:36:15+09:00&quot;,&quot;url&quot;:&quot;https://github.com/e-room/e-room/commit/c6a4bde987765a3fb6994def4dc8565573f36cc3&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;committer&quot;:{&quot;name&quot;:&quot;larrykwon&quot;,&quot;email&quot;:&quot;koallarry11@kaist.ac.kr&quot;,&quot;username&quot;:&quot;LarryKwon&quot;},&quot;added&quot;:[&quot;serverless.yml&quot;,&quot;src/BuildingGen/BuildingTestdataGen.ts&quot;,&quot;src/BuildingGen/package-lock.json&quot;,&quot;src/BuildingGen/package.json&quot;,&quot;src/BuildingGen/tsconfig.json&quot;,&quot;src/main/java/com/project/Project/StreamLambdaHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/AuthUser.java&quot;,&quot;src/main/java/com/project/Project/auth/AuthUserArgumentResolver.java&quot;,&quot;src/main/java/com/project/Project/auth/CustomAuthenticationEntryPoint.java&quot;,&quot;src/main/java/com/project/Project/auth/authentication/JwtAuthentication.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/MemberDto.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/OAuthAttributes.java&quot;,&quot;src/main/java/com/project/Project/auth/dto/Token.java&quot;,&quot;src/main/java/com/project/Project/auth/exception/BasicAuthException.java&quot;,&quot;src/main/java/com/project/Project/auth/exception/JwtException.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/CustomBasicAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/BasicAuthFailureHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/JWTFailureHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/handler/OAuth2SuccessHandler.java&quot;,&quot;src/main/java/com/project/Project/auth/provider/JwtProvider.java&quot;,&quot;src/main/java/com/project/Project/auth/service/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/auth/service/TokenService.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/AmazonS3PackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/AmazonS3Service.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/FilePackageMeta.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/FileService.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ProfileImagePackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ProfileImagePackageMetaMeta.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ReviewImagePackageCommand.java&quot;,&quot;src/main/java/com/project/Project/aws/s3/ReviewImagePackageMetaMeta.java&quot;,&quot;src/main/java/com/project/Project/config/AmazonConfig.java&quot;,&quot;src/main/java/com/project/Project/config/EventListenerConfig.java&quot;,&quot;src/main/java/com/project/Project/config/QuerydslConfig.java&quot;,&quot;src/main/java/com/project/Project/config/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/config/WebClientConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/CursorDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/AddressDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingOptionalDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/CoordinateDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewBaseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResidencePeriodDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewScoreDto.java&quot;,&quot;src/main/java/com/project/Project/controller/room/dto/RoomBaseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/DTypeEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/FileFolder.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/KeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewImage.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewToReviewKeyword.java&quot;,&quot;src/main/java/com/project/Project/exception/ApiErrorResult.java&quot;,&quot;src/main/java/com/project/Project/exception/CustomException.java&quot;,&quot;src/main/java/com/project/Project/exception/ErrorCode.java&quot;,&quot;src/main/java/com/project/Project/exception/building/BuildingException.java&quot;,&quot;src/main/java/com/project/Project/exception/member/MemberException.java&quot;,&quot;src/main/java/com/project/Project/exception/review/ReviewException.java&quot;,&quot;src/main/java/com/project/Project/exception/room/RoomException.java&quot;,&quot;src/main/java/com/project/Project/loader/review/ReviewLoader.java&quot;,&quot;src/main/java/com/project/Project/repository/EventListener.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingSummaryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/building/BuildingToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/member/MemberRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/projection/building/OnlyBuildingIdAndCoord.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewCustomRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewEventListener.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewImageRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewKeywordRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/review/ReviewToReviewCategoryRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/room/RoomRepository.java&quot;,&quot;src/main/java/com/project/Project/serializer/building/BuildingSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/member/MemberSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/review/ReviewSerializer.java&quot;,&quot;src/main/java/com/project/Project/serializer/room/RoomSerializer.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingGenerator.java&quot;,&quot;src/main/java/com/project/Project/service/building/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/building/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/FileProcessService.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/FileProcessServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/ProfileImageProcess.java&quot;,&quot;src/main/java/com/project/Project/service/fileProcess/ReviewImageProcess.java&quot;,&quot;src/main/java/com/project/Project/service/member/MemberService.java&quot;,&quot;src/main/java/com/project/Project/service/member/impl/MemberServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewCategoryService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewGenerator.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewImageService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewKeywordService.java&quot;,&quot;src/main/java/com/project/Project/service/review/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewCategoryServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewImageServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewKeywordServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/review/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/room/RoomService.java&quot;,&quot;src/main/java/com/project/Project/service/room/impl/RoomServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/user/repository/UserRepositoryImpl.java&quot;,&quot;src/main/java/com/project/Project/util/ApplicationContextServe.java&quot;,&quot;src/main/java/com/project/Project/util/JsonResult.java&quot;,&quot;src/main/java/com/project/Project/util/KakaoAddressAPI.java&quot;,&quot;src/main/java/com/project/Project/util/PropertyUtil.java&quot;,&quot;src/main/java/com/project/Project/util/component/CookieUtil.java&quot;,&quot;src/main/java/com/project/Project/util/component/MemberGen.java&quot;,&quot;src/main/java/com/project/Project/util/component/QueryDslUtil.java&quot;,&quot;src/main/resources/application-aws.yml&quot;,&quot;src/main/resources/application-security.yml&quot;,&quot;src/test/java/JPA/FlushTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/review/controller/ReviewRestControllerTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/review/dto/ReviewRequestDtoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto2.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto3.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto4.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto5.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto6.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/bad/reviewCreateDto7.json&quot;,&quot;src/test/java/com/project/Project/unit/controller/validation/sample/good/reviewCreateDto1.json&quot;,&quot;src/test/java/com/project/Project/unit/repository/BuildingRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/RepositoryTestConfig.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewCategoryRepoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewKeywordRepoTest.java&quot;,&quot;src/test/java/com/project/Project/unit/repository/ReviewRepositoryTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingGeneratorTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingGeneratorTestConfig.java&quot;,&quot;src/test/java/com/project/Project/unit/service/BuildingServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/ReviewLikeServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/ReviewServiceTest.java&quot;,&quot;src/test/java/com/project/Project/unit/service/RoomServiceTest.java&quot;,&quot;src/test/java/com/project/Project/util/annotation/WithMockCustomOAuth2Account.java&quot;,&quot;src/test/java/com/project/Project/util/annotation/WithMockCustomOAuth2AccountSecurityContextFactory.java&quot;,&quot;src/test/java/com/project/Project/util/generator/member/TestMemberGenerator.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/ReviewCreateConfigurer.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/TestCase.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/TestReviewGenerator.java&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testCase/case.json&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testImage/test1.png&quot;,&quot;src/test/java/com/project/Project/util/generator/review/testImage/test2.png&quot;,&quot;src/test/resources/test.png&quot;],&quot;removed&quot;:[&quot;src/main/java/com/project/Project/Util/CookieUtil.java&quot;,&quot;src/main/java/com/project/Project/Util/JsonResult.java&quot;,&quot;src/main/java/com/project/Project/config/auth/OAuth2SuccessHandler.java&quot;,&quot;src/main/java/com/project/Project/config/auth/SecurityConfig.java&quot;,&quot;src/main/java/com/project/Project/config/auth/UserRequestMapper.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/OAuthAttributes.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/Token.java&quot;,&quot;src/main/java/com/project/Project/config/auth/dto/UserDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/Address.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/Coordinate.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/AdvantageKeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/DisadvantageKeywordEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/AdvantageKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/DisadvantageKeyword.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewForm.java&quot;,&quot;src/main/java/com/project/Project/filter/JwtAuthFilter.java&quot;,&quot;src/main/java/com/project/Project/repository/BuildingRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/MemberRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewFormRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/ReviewRepository.java&quot;,&quot;src/main/java/com/project/Project/repository/RoomRepository.java&quot;,&quot;src/main/java/com/project/Project/service/BuildingService.java&quot;,&quot;src/main/java/com/project/Project/service/MemberService.java&quot;,&quot;src/main/java/com/project/Project/service/ReviewService.java&quot;,&quot;src/main/java/com/project/Project/service/RoomService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/BuildingServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/CustomOAuth2UserService.java&quot;,&quot;src/main/java/com/project/Project/service/impl/MemberServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/ReviewServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/RoomServiceImpl.java&quot;,&quot;src/main/java/com/project/Project/service/impl/TokenService.java&quot;,&quot;src/test/java/com/project/Project/ProjectApplicationTests.java&quot;,&quot;src/test/java/com/project/Project/WithMockCustomOAuth2Account.java&quot;,&quot;src/test/java/com/project/Project/WithMockCustomOAuth2AccountSecurityContextFactory.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/BuildingRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/ReviewRequestValidationTest.java&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto2.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto3.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto4.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto5.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto6.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/bad/reviewCreateDto7.json&quot;,&quot;src/test/java/com/project/Project/controller/validation/sample/good/reviewCreateDto1.json&quot;,&quot;src/test/java/com/project/Project/db/DBConnectionTest.java&quot;,&quot;src/test/java/com/project/Project/db/SoftDeleteTest.java&quot;],&quot;modified&quot;:[&quot;.gitignore&quot;,&quot;build.gradle&quot;,&quot;src/main/java/com/project/Project/ProjectApplication.java&quot;,&quot;src/main/java/com/project/Project/config/WebConfig.java&quot;,&quot;src/main/java/com/project/Project/controller/OauthTestController.java&quot;,&quot;src/main/java/com/project/Project/controller/TokenController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/BuildingRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/building/dto/BuildingResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/controller/ReviewRestController.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewRequestDto.java&quot;,&quot;src/main/java/com/project/Project/controller/review/dto/ReviewResponseDto.java&quot;,&quot;src/main/java/com/project/Project/controller/room/dto/RoomResponseDto.java&quot;,&quot;src/main/java/com/project/Project/domain/Member.java&quot;,&quot;src/main/java/com/project/Project/domain/building/Building.java&quot;,&quot;src/main/java/com/project/Project/domain/building/BuildingSummary.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Address.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/AnonymousStatus.java&quot;,&quot;src/main/java/com/project/Project/domain/embedded/Coordinate.java&quot;,&quot;src/main/java/com/project/Project/domain/enums/ReviewCategoryEnum.java&quot;,&quot;src/main/java/com/project/Project/domain/review/Review.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/review/ReviewToReviewCategory.java&quot;,&quot;src/main/java/com/project/Project/domain/room/Room.java&quot;,&quot;src/main/java/com/project/Project/exception/GlobalControllerExceptionHandler.java&quot;,&quot;src/main/java/com/project/Project/user/entity/UserEntity.java&quot;,&quot;src/main/java/com/project/Project/user/repository/UserRepository.java&quot;,&quot;src/main/java/com/project/Project/validator/BuildingExistValidator.java&quot;,&quot;src/main/java/com/project/Project/validator/ReviewExistValidator.java&quot;,&quot;src/main/java/com/project/Project/validator/RoomExistValidator.java&quot;,&quot;src/main/resources/application.yml&quot;]}}</postContent>
            <printContributedVariables>false</printContributedVariables>
            <printPostContent>false</printPostContent>
            <cause>Generic Cause</cause>
          </org.jenkinsci.plugins.gwt.GenericCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters/>
      <parameterDefinitionNames class="empty-list"/>
    </hudson.model.ParametersAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@612.v84da_9c54906d">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2114.v2654ca_721309">
      <stagesUUID>ddde1c7d-5860-44a1-9d8b-a1a6510dec5e</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2114.v2654ca_721309">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <post>
                  <conditions>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>success</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>echo</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>message</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">Successfully Cloned Repository</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>failure</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>error</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>message</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">This pipeline stops here...</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                  </conditions>
                </post>
                <name>Prepare</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>echo</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>message</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">Clonning Repository</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">pwd</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">ls -al</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>git</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>url</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">https://github.com/e-room/e-room.git</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>branch</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">develop</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>credentialsId</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">github</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">ls -al</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <post>
                  <conditions>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>failure</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>error</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>message</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">This pipeline stops here...</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                  </conditions>
                </post>
                <name>Bulid Gradle</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>echo</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>message</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">Bulid Gradle</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">pwd</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>withGradle</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map"/>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>sh</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>script</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">./gradlew clean build --exclude-task test</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <post>
                  <conditions>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>failure</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>error</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>message</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">This pipeline stops here...</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                  </conditions>
                </post>
                <name>Bulid Docker</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>echo</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>message</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">Bulid Docker</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">pwd</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">dockerImage = docker.build imagename</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <post>
                  <conditions>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>failure</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>error</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>message</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">This pipeline stops here...</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                  </conditions>
                </post>
                <name>Push Docker</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>echo</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>message</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">Push Docker</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">ls -al</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">docker.withRegistry( &apos;&apos;, registryCredential) {
                    dockerImage.push() 
                }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Docker Run</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>echo</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>message</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">Pull Docker Image &amp; Docker Image Run</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>sshagent</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>credentials</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">${[&apos;ssh&apos;]}</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                          </arguments>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>sh</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>script</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">ssh -o StrictHostKeyChecking=no ubuntu@ec2-43-200-50-204.ap-northeast-2.compute.amazonaws.com &apos;docker pull larrykwon/eroom-api:latest&apos;</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>sh</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>script</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">ssh -o StrictHostKeyChecking=no ubuntu@ec2-43-200-50-204.ap-northeast-2.compute.amazonaws.com &apos;docker ps -aq --filter name=eroom-api-core | grep . &amp;&amp; docker rm -f $(docker ps -aq --filter name=eroom-api-core)&apos;</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>sh</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>script</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">ssh -o StrictHostKeyChecking=no ubuntu@ec2-43-200-50-204.ap-northeast-2.compute.amazonaws.com &apos;docker run -d --name eroom-api-core -p 8080:8080 larrykwon/eroom-api:latest&apos;</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>ddde1c7d-5860-44a1-9d8b-a1a6510dec5e</uuid>
          </stages>
          <postBuild>
            <conditions>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>success</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>slackSend</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>channel</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">#tech-deploy</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>color</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">#00FF00</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                              <value class="string">&quot;SUCCESSFUL: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos; (${env.BUILD_URL})&quot;</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>failure</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>slackSend</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>channel</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">#tech-deploy</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>color</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">#FF0000</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                              <value class="string">&quot;FAILED: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos; (${env.BUILD_URL})&quot;</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
            </conditions>
          </postBuild>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>imagename</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">larrykwon/eroom-api</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>registryCredential</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">docker-hub</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>dockerImage</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1143.vb_e8b_b_ceee347">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.5">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/ci-cd-test</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.2">
              <sha1>64f77e7a9a2f80d35948f8a4cc0e3a9d51103e30</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/ci-cd-test</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.2">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>50</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/develop</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.2">
              <sha1>c9d4a4585719dc4bb304e648faba6b1d212be74c</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/develop</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>53</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry[2]/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/e-room/e-room.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@400.v6b_89a_1317c9a_">
      <revisionStates>
        <entry>
          <string>git https://github.com/e-room/e-room.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2759.v87459c4eea_ca_">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>131</queueId>
  <timestamp>1670348259118</timestamp>
  <startTime>1670348259123</startTime>
  <result>FAILURE</result>
  <duration>117124</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    agent any

    environment {
        imagename = &quot;larrykwon/eroom-api&quot;
        registryCredential = &apos;docker-hub&apos;
        dockerImage = &apos;&apos;
    }

    stages {
        stage(&apos;Prepare&apos;) {
          steps {
            echo &apos;Clonning Repository&apos;
            sh &apos;pwd&apos;
            sh &apos;ls -al&apos;
            git url: &apos;https://github.com/e-room/e-room.git&apos;,
              branch: &apos;develop&apos;,
              credentialsId: &apos;github&apos;
            sh &apos;ls -al&apos;
            }
            post {
             success { 
               echo &apos;Successfully Cloned Repository&apos;
             }
           	 failure {
               error &apos;This pipeline stops here...&apos;
             }
          }
        }

        stage(&apos;Bulid Gradle&apos;) {
          steps {
            echo &apos;Bulid Gradle&apos;
            sh &apos;pwd&apos;
            withGradle {
                sh &apos;./gradlew clean build --exclude-task test&apos;
            }
          }
          post {
            failure {
              error &apos;This pipeline stops here...&apos;
            }
          }
        }
        
        stage(&apos;Bulid Docker&apos;) {
          steps {
            echo &apos;Bulid Docker&apos;
            sh &apos;pwd&apos;
            // sh &apos;cd ./eroom-api-docker/eroom-api-dockerfile&apos;
            // dir(&apos;eroom-api-docker/eroom-api-dockerfile&apos;){
                script {
                    dockerImage = docker.build imagename
                }
            // }
          }
          post {
            failure {
              error &apos;This pipeline stops here...&apos;
            }
          }
        }

        stage(&apos;Push Docker&apos;) {
          steps {
            echo &apos;Push Docker&apos;
            sh &apos;ls -al&apos;
            script {
                docker.withRegistry( &apos;&apos;, registryCredential) {
                    dockerImage.push() 
                }
            }
          }
          post {
            failure {
              error &apos;This pipeline stops here...&apos;
            }
          }
        }
        
        stage(&apos;Docker Run&apos;) {
            steps {
                echo &apos;Pull Docker Image &amp; Docker Image Run&apos;
                sshagent (credentials: [&apos;ssh&apos;]) {
                    sh &quot;ssh -o StrictHostKeyChecking=no ubuntu@ec2-43-200-50-204.ap-northeast-2.compute.amazonaws.com &apos;docker pull larrykwon/eroom-api:latest&apos;&quot; 
                    sh &quot;ssh -o StrictHostKeyChecking=no ubuntu@ec2-43-200-50-204.ap-northeast-2.compute.amazonaws.com &apos;docker ps -aq --filter name=eroom-api-core | grep . &amp;&amp; docker rm -f \$(docker ps -aq --filter name=eroom-api-core)&apos;&quot;
                    sh &quot;ssh -o StrictHostKeyChecking=no ubuntu@ec2-43-200-50-204.ap-northeast-2.compute.amazonaws.com &apos;docker run -d --name eroom-api-core -p 8080:8080 larrykwon/eroom-api:latest&apos;&quot;
                }
            }
        }
    }
    post {
        success {
            slackSend (channel: &apos;#tech-deploy&apos;, color: &apos;#00FF00&apos;, message: &quot;SUCCESSFUL: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos; (${env.BUILD_URL})&quot;)
        }
        failure {
            slackSend (channel: &apos;#tech-deploy&apos;, color: &apos;#FF0000&apos;, message: &quot;FAILED: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos; (${env.BUILD_URL})&quot;)
        }
    }
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="concurrent-hash-map">
      <entry>
        <string>flowNode</string>
        <long>951113408</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>6978579989</long>
      </entry>
      <entry>
        <string>run</string>
        <long>19963941924</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>833221093</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>4901667810</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>93</iota>
    <head>1:93</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.5">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/e-room/e-room.git</url>
            <credentialsId>github</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/develop</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>develop</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/eroom api deploy</workspace>
      <changelogFile>/var/jenkins_home/jobs/eroom api deploy/builds/53/changelog11758439433720511123.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>